<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com_xzyh_crm.dao.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com_xzyh_crm.pojo.SysRole" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="role_status" property="roleStatus" jdbcType="INTEGER" />
    <result column="sys_user_id" property="sysUserId" jdbcType="BIGINT" />
    <result column="is_leader" property="isLeader" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, role_desc, create_time, update_time, role_status, sys_user_id, is_leader, 
    pid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com_xzyh_crm.pojo.SysRole" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role (role_name, role_desc, create_time, 
      update_time, role_status, sys_user_id, 
      is_leader, pid)
    values (#{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{roleStatus,jdbcType=INTEGER}, #{sysUserId,jdbcType=BIGINT}, 
      #{isLeader,jdbcType=INTEGER}, #{pid,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com_xzyh_crm.pojo.SysRole" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="roleStatus != null" >
        role_status,
      </if>
      <if test="sysUserId != null" >
        sys_user_id,
      </if>
      <if test="isLeader != null" >
        is_leader,
      </if>
      <if test="pid != null" >
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleStatus != null" >
        #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="sysUserId != null" >
        #{sysUserId,jdbcType=BIGINT},
      </if>
      <if test="isLeader != null" >
        #{isLeader,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com_xzyh_crm.pojo.SysRole" >
    update sys_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleStatus != null" >
        role_status = #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="sysUserId != null" >
        sys_user_id = #{sysUserId,jdbcType=BIGINT},
      </if>
      <if test="isLeader != null" >
        is_leader = #{isLeader,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com_xzyh_crm.pojo.SysRole" >
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_status = #{roleStatus,jdbcType=INTEGER},
      sys_user_id = #{sysUserId,jdbcType=BIGINT},
      is_leader = #{isLeader,jdbcType=INTEGER},
      pid = #{pid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--  这个是添加角色时，如果是员工，判断一下领导是否存在-->
  <select id="selectByPid" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{pid,jdbcType=BIGINT}
  </select>
  <!--  这个是添加角色时，判断角色的name是否存在-->
  <select id="findByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from sys_role
    where role_name = #{name,jdbcType=VARCHAR}
  </select>
  <!--  获取全部的信息用来做分页使用的查询状态可用的账户-->
  <select id="selectAll" resultMap="BaseResultMap" parameterType="com_xzyh_crm.vo.SysRoleVo" >
    select
    <include refid="Base_Column_List" />
    from sys_role
    <where>
      <if test="roleName != null">
        role_name like '%${roleName}%'and
      </if>
    role_status = 1
    </where>
    order by create_time desc
  </select>
</mapper>